#!/bin/bash

#Script file to automatically configure the switches, the LFSW190410-50 Frequency Synthesizer
#and the ADF4108 Frequency Synthesizer of the RF LO prototyping chain, given one input frequency,
#indicated either in kHz or MHz.

#Usage: setfreq_LO_board [[--kHz|-k] kfreq] [[--MHz|-M] Mfreq]
#(K. Khalfallah, Eurecom, Mob Com Dpt. Feb 2007)

FREQ_MIN_MHZ=1900 #2125
FREQ_MAX_MHZ=8200
FREQ_MIN_KHZ=$((FREQ_MIN_MHZ * 1000))
FREQ_MAX_KHZ=$((FREQ_MAX_MHZ * 1000))
echo $FREQ_MIN_KHZ

thisscript=${0##*/}
LFSWcmd=LFSWcmd
if ! which $LFSWcmd 1>/dev/null 2>&1 ; then
  echo "The $LFSWcmd tool is not reachable. Set your PATH env variable."
  exit
fi
ADFcmd=ADFcmd
if ! which $ADFcmd 1>/dev/null 2>&1 ; then
  echo "The $ADFcmd tool is not reachable. Set your PATH env variable."
  exit
fi
RFswitch=RFswitch
if ! which $RFswitch 1>/dev/null 2>&1 ; then
  echo "The $RFswitch tool is not reachable. Set your PATH env variable."
  exit
fi

usage() {
  echo "  $thisscript: Tool to automatically configure the switches, the LFSW190410-50 Frequency Synthesizer"
  echo "           and the ADF4108 Frequency Synthesizer of the RF LO prototyping chain, given one input frequency,"
  echo "           indicated either in kHz or MHz."
  echo "Usage:"
  echo "  $thisscript [[--kHz|-k] kfreq] [[--MHz|-M] Mfreq] [-P|--posted] [--help|-h] [--verbose|-v]"
  echo
}

# Check coherency of input parameters
NARG=$#
if [ $NARG -gt 4 -o $NARG -lt 1 ] ; then
  usage; exit;
fi
# There is at least 1 argument, and at most 4 ones.

# Some init
error=0
kHz_switch=0
MHz_switch=0
asked_help=0
asked_verbose=0
asked_posted=0
debug=0
while [ $NARG != 0 ]
do
  if [ $1 = "--kHz" -o $1 = "-k" ] ; then
    if [ $kHz_switch = 1 -o $MHz_switch = 1 ] ; then
      echo "You can specify only one frequency."
      error=1
      shift 1; NARG=$(($NARG - 1))
    else
      kHz_switch=1
      if [ ! $2 ] ; then
        echo "Specify a frequency to --kHz|-k switch."
        error=1
        shift 1; NARG=$(($NARG - 1))
      else
        frequency_kHz=$2
        shift 2; NARG=$(($NARG - 2))
      fi
    fi
  elif [ $1 = "--MHz" -o $1 = "-M" ] ; then
    if [ $kHz_switch = 1 -o $MHz_switch = 1 ] ; then
      echo "You can specify only one frequency."
      error=1
      shift 1; NARG=$(($NARG - 1))
    else
      MHz_switch=1
      if [ ! $2 ] ; then
        echo "Specify a frequency to --MHz|-M switch."
        error=1
        shift 1; NARG=$(($NARG - 1))
      else
        frequency_MHz=$2
        shift 2; NARG=$(($NARG - 2))
      fi
    fi
  elif [ $1 = "--help" -o $1 = "-h" ] ; then
    asked_help=1
    shift 1; NARG=$(($NARG - 1))
  elif [ $1 = "--verbose" -o $1 = "-v" ] ; then
    asked_verbose=1
    shift 1; NARG=$(($NARG - 1))
  elif [ $1 = "--debug" ] ; then
    debug=1;
    shift 1; NARG=$(($NARG - 1))
  elif [ $1 = "--posted" -o $1 = "-P" ] ; then
    asked_posted=1
    shift 1; NARG=$(($NARG - 1))
  else
    echo "Unknown option $1"
    shift 1; NARG=$(($NARG - 1))
    error=1
  fi
done

if [ $asked_help = 1 ] ; then
  usage
elif [ $error = 1 ] ; then
  echo "Type $thisscript [--help|-h] for help."
  exit
fi

# If verbose mode, display the frequency
if [ $asked_verbose = 1 -o $debug = 1 ] ; then
  if [ $frequency_kHz ] ; then
    echo "Ok, asked for $frequency_kHz kHz."
  fi
  if [ $frequency_MHz ] ; then
    echo "Ok, asked for $frequency_MHz MHz."
  fi
fi

# If posted option was asked, add the switch to commands
if [ $asked_posted = 1 ] ; then
  LFSWcmd="$LFSWcmd --posted"
  ADFcmd="$ADFcmd --posted"
  RFswitch="$RFswitch --posted"
fi

# Better to use only kHz (it's more simple to only have one unit).
if [ $frequency_MHz ] ; then
  frequency_kHz=$(($frequency_MHz * 1000))
fi

# Ok, 3 things to do:
#   Action 1) Ask the LFSWcmd command to set the frequency to LFSW190410-50 chip
#             The frequency we provide this tool with depends on a small linear formula
#             of variable $frequency_kHz.
#   Action 2) Ask the ADF4108 to synthesize 8.2 GHz frequency.
#   Action 3) Set on/off the RF switches according to the desired frequency
#             The on/off configuration for each RF switch depends of the range of the value
#             of variable $frequency_kHz, according to different predefined staged values:

# This is Action 1)
LFSW_frequency_kHz=$(($frequency_kHz))
if [ $LFSW_frequency_kHz -gt 3800000 ] ; then
  LFSW_frequency_kHz=$(($LFSW_frequency_kHz / 2))
fi
setfreqcommand=$LFSWcmd" --kHz "$LFSW_frequency_kHz
if [ $asked_verbose = 1 -o $debug = 1 ] ; then
  setfreqcommand=$setfreqcommand" -v"
  echo "Action 1) Executing command: $setfreqcommand"
fi
$setfreqcommand 2>&1 | sed -e 's/^/          /'



# This is Action 2)
adfcommand=$ADFcmd" --force8200"
if [ $asked_verbose = 1 -o $debug = 1 ] ; then
  adfcommand=$adfcommand" -vvv"
  echo "Action 2) Executing command: $adfcommand"
fi
$adfcommand 2>&1 | sed -e 's/^/          /'

# This is Action 3)
    tab_lo1=(on off on off)
    tab_lo2=(on off off on)
    tab_lo_F=(off on on on)   # created


if   [ $frequency_kHz                               -le 3800000 ] ; then range=0 # we know that this freq is for TX, between 2.125 and 3.8
elif [ $frequency_kHz -gt 3800000 -a $frequency_kHz -le 4710000 ] ; then range=1 # direct LO in Low
elif [ $frequency_kHz -gt 4710000 -a $frequency_kHz -le 5700000 ] ; then range=2  # direct LO in Med
else                                                                     range=3 #direct LO in High
#elif [ $frequency_kHz -gt 6200000 -a $frequency_kHz -le 8200000 ] ; then range=7
fi
switchcommand=$RFswitch" --lo_f "${tab_lo_F[range]}" --lo1 "${tab_lo1[range]}" --lo2 "${tab_lo2[range]}
if [ $asked_verbose = 1 -o $debug = 1 ] ; then
  switchcommand=$switchcommand" -vv"
  echo "Action 3) Executing command:"
  echo "            "$switchcommand
fi
$switchcommand 2>&1 | sed -e 's/^/          /'
