%!PS-Adobe-3.0 EPSF-3.0
%%Title: (layer2_stack.pdf)
%%Version: 1 3
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 23:48:14 04/10/08
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 72 64 672 576
%%HiResBoundingBox: 72.0 63.6 672.0 576.4
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3133 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2008-04-10T23:48:14+02:00</xap:CreateDate>
         <xap:ModifyDate>2008-04-10T23:48:14+02:00</xap:ModifyDate>
         <xap:MetadataDate>2008-04-10T23:48:14+02:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:818A8CD24707DD11B1E3DCC6C02B32F6</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:818A8CD24707DD11B1E3DCC6C02B32F6</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
72.0 63.6 600.0 512.8 rectclip
q
72.0 63.6 m
672.0 63.6 l
672.0 576.4 l
72.0 576.4 l
h
W
n
1 j
q
0.4 w
n
96.0 64.0 m
608.0 64.0 l
608.0 128.0 l
96.0 128.0 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
96.0 192.0 m
608.0 192.0 l
608.0 272.0 l
96.0 272.0 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
320.0 320.0 m
608.0 320.0 l
608.0 384.0 l
320.0 384.0 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
432.0 336.099 m
496.0 336.099 l
496.0 368.099 l
432.0 368.099 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
320.0 207.624 m
592.0 207.624 l
592.0 239.624 l
320.0 239.624 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
112.0 208.0 m
272.0 208.0 l
272.0 240.0 l
112.0 240.0 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
368.0 336.0 m
368.0 240.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
368.0 240.0 m
370.333 247.0 l
365.667 247.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
464.0 336.0 m
464.0 240.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
464.0 240.0 m
466.333 247.0 l
461.667 247.0 l
h
q
eofill
Q
S
Q
q
n
464.0 336.0 m
461.667 329.0 l
466.333 329.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
560.0 336.0 m
560.0 240.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
560.0 240.0 m
562.333 247.0 l
557.667 247.0 l
h
q
eofill
Q
S
Q
q
n
560.0 336.0 m
557.667 329.0 l
562.333 329.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
320.0 232.0 m
272.0 232.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
272.0 232.0 m
279.0 229.667 l
279.0 234.333 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
368.0 208.0 m
368.0 128.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
368.0 128.0 m
370.333 135.0 l
365.667 135.0 l
h
q
eofill
Q
S
Q
q
n
368.0 208.0 m
365.667 201.0 l
370.333 201.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
464.0 208.0 m
464.0 128.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
464.0 128.0 m
466.333 135.0 l
461.667 135.0 l
h
q
eofill
Q
S
Q
q
n
464.0 208.0 m
461.667 201.0 l
466.333 201.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
560.0 208.0 m
560.0 128.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
560.0 128.0 m
562.333 135.0 l
557.667 135.0 l
h
q
eofill
Q
S
Q
q
n
560.0 208.0 m
557.667 201.0 l
562.333 201.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
192.0 208.0 m
192.0 128.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
192.0 128.0 m
194.333 135.0 l
189.667 135.0 l
h
q
eofill
Q
S
Q
Q
q
1.0 0.0 0.0 1.0 336.0 217.248 cm
1.0 0.0 0.0 1.0 0.0 12.752 cm
1.0 0.0 0.0 1.0 46.936 -9.962 cm
1.0 0.0 0.0 1.0 -46.936 -782.038 cm
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: XKLAAA+CMR12 Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /XKLAAA+CMR12 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5000794 def
/FontBBox {-34 -251 988 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 446 665 675] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [29] def
/StdVW [65] def
/StemSnapH [20 29] def
/StemSnapV [65 81] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A9563F93DCB7939BC> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 0 /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/fi/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/parenleft/parenright
/.notdef/.notdef/.notdef/hyphen/.notdef/slash
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/A
/B/C/D/.notdef/.notdef/.notdef
/H/.notdef/.notdef/.notdef/L/M
/N/.notdef/P/.notdef/R/S
/T/U/.notdef/.notdef/.notdef/Y
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/a/.notdef/c/d/e
/f/g/h/i/.notdef/k
/l/m/n/o/.notdef/.notdef
/r/s/t/u/v/w
/.notdef/y/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef
/N8/XKLAAA+CMR12 -1 TZ
51.918 782.038 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B08A94108625EEF8A2852369F2025785ABDE93DA58041519A1
BC607D03132B9BA7FAEECD51A111F3767B5929D6E7CB1FD0CFFEB5BFDB86C3AC
03D68B2EEF105D21282719565587E9A043D13B400D0A9C98D2216C3159488579
5190EA94489FF7BE5CFC3FF306DB235717C2BE4892DE04F968B6CB925666F6CC
6F48769B9886B6BC4620D1291157AEC85DAC80C46C0852095A46CC91A04BF0A3
90672686833F44E4BF4F38E8B8452A0461B1B588C7> |-
/A <1C60D8A8C9B08A9450211CEE5BEC0624AAD8A46261F8E129CCA2E8D48639
F40C3E6AF96CDC7565F988EFE865FAC0018DF0222B875BB1790B33740B3D57AD
979476375CF819753A46EA2F6D4EEA3B88146417A472BA539A45856DF8A08E60
CB8BE5EC4864588E7C3F813A7530C0D00BEBF595B39826E7CE63A7E0B1723AE6
E27FF7F98C0F49228D3B4C153703B8E9AD35395BF3D087641E0B> |-
/C <1C60D8A8C9B08A945A96BCDB3098C9BF4B1134A6EC6C054582BC63F65E14
158893BAB5142BD200D141BE19904E79DACFB0B88801CB039841A43B949FFFFB
28131D382C64450EFC87D654B7CD5490B256DA5D12F884AB9483B8BCD70C53E1
40D1A10A86D0075927D7BD8289023DD4E247B1CE92C4B883E73E4D9365F9FD0D
C8D3127942CEBCEF5175> |-
/S <1C60D8A8C9B08A95C885DB2659C88FB4AA9A4C6C9CF3B290D93D5D7CDB9F
439D84C51B2D5A7DD37F68CF83CEF66D24E13DD38805146FB32BE0AF3019FA0B
21547A9422B9B4F45AB5E603835F77470FA3F81439629BF366F98DCAEBB4A3D8
E13645E10C9EE71C3F55FC6B12491E6FD0412735441C3963971C28C6DC4DA02B
FA0DF61B2661CD0608E9ED6F185B48639A45743EB3167E90AD3372E62B26809E
F9CDBE7E02E56D2D9F2855792C282FB0CD9D4F5D952489E6097228602FDAD1DA
5F4F23AA6563E022AF00C7C848ECA316EE86> |-
/c <1C60D8A8C9B08A95B5589A17E299A85F5665C5E4B2184F65DC0B80FF2328
F3C14CD56C49511D58CFC34EAEC2D3E7D4B9CA757C51EABB6D4DE3B855D375BE
9D15F8DBC8095A7FCD2256822EFFCE3344DB49DE2C6795B1E18ED28AC09AFEDC
064F61ED47F3F9C723849CEE3DC5E850D8EE904AEC9D98BF> |-
/h <1C60D8A8C9B08A95C885DB2659C87211BC4EC5ACA607AB7CAA6EE1D671AA
EBA53BDEB3242ABB0958B82DE5B6CC493CDD0E5B6ECBCA4757ECA8978D9563C5
A26F2E32465935ED9117488346D1732C095C2A6B6B3018903D976D52946A09D0
8EFEE26EBD3B032ACD3615AA740EEFAD4702F331784C2F83107DA1F673B676B8
9ECAE0B664BC7F59F94B5A5BEC4E90B285C1F82929A135A5BBB7B57C> |-
/e <1C60D8A8C9B08A95B5589A17E299A85F56650D458389116DCBBAC98A1E6B
3CF1843FC59E5770BC19E85D29A0B39E8CF44EC4C8DFBE0B30D660AE295FF9C2
99A8310B2430A2CD6CD75C75358632CB68F75B932EE594A08324902338C29BCE
B2B55DB4331A73B083EAB6FA11602E9E5E49ED74DE2C933E> |-
/d <1C60D8A8C9B08A95C885DB2659C8780FBE7280ECAADE89C0D549B4D8567C
028E15FE0146BD9D436A83AE1108C561A696A9B0BD76C98930EE51DEE4F634DE
24C571F45CD1038F0684215A12E9B3DE61F45452BAC2EE8E738394B2812D1DB3
9BEC14FBFCDC9E311B135D9E893B77DD0A82E18275C076B97065613F9C609772
75D45ADF122A7502DC40C34CE07F2F4B841DC29289> |-
/u <1C60D8A8C9B08A95C885DB2659C8780FBE729CB466D93DED2BE4AF39918A
1B295E2E7BB15C3334B9D4BE4D150706FED71E6DB031D6668E0343124EA1A7CA
48CA4C5F8EA489A2BBB7272E74EE19025A0A991F5792F53ECEEB25A0ACD9C587
B57A40B899211E2E855BD57181107636B0EDBB959DAE4D> |-
/l <1C60D8A8C9B08A9576E61A968506029CDE5E0812906BA501B61F5B74FA95
516C992D37DA48CE17DDA766B95CAC78DD38063D3ABB8A4B416091CE04272DAD
85CBCF850D25058E03A62132> |-
/i <1C60D8A8C9B08A9576E61A968506029CDE5FDC9E91593CC5D539228C7F6B
0E8F9E46EF9506DFDAD25E3F37EEE782D2A43A534304DD3783C592B3EB07A970
11615F5925CA5D9FBE15D7AE6DCB5EDED6CE7B4A9045D23E588EDDFC684979C7
8B82A6AD20E7419DD7> |-
/n <1C60D8A8C9B08A95C885DB2659C87211BC4EC5ACA609260A0359ACE7141F
A1F40A3BB7002F1AC94935F922B3E78CD62255667BCAEE9D3D3EA13D916147A9
0BCD3BA93A16DE4DAC12ABA0183FAEF7C9D63572D435EA5461F58A383A6C3696
E39C3AFB74BE8CEB7D705CDA269939B0AA6B05D51E0FA4C2576D84E91D7B6633
2B9B490227C399D0D06819B381F79E68447332A4E2BCCC> |-
/g <1C60D8A8C9B08A95A31CD7D9F217DCBA613E2A13AB3BE987DBE864A65FF1
0624E535D1B9D782C370075194C382DF36ABDC318657EBCD1DFB21A4CDA18EC4
3A97E6E46DB212FDDE4EB676A4276F51E83708E730A4523DFE7FB14231A6F148
AC68B02795154AADC114D1EE688B7030BF517EB902802D3EDE3604148FFD0406
BFB225A3A8C415C619A44556D30D5EDAFBDF4D6E0D0CE66F4BDBC684D8EBED77
E0A94087387DD9D961916182E2424E4765EBE29AFDB3497012817BBEFE56340A
B5BD483DA55F09DF824EFC52AA65341B10D4EC118586919BBCFDBED2C33F40FB
AC6117128CC7EF4038BE88AD0507DE98F797E22AFD68DE97ECF295F5A48658D8
4E64A0489C57B3D2AD1F54DA7832956E1936BD> |-
/U <1C60D8A8C9B08A9450211CEE5BECFBB3C0BF5B056540C4C225033B395876
9AF59B6D38D604ACAA575BDB6CBCA1AA699589BBF72FC7C7D7C53E063BD75EF5
316C2935CE4D1F21B57512C3C94429DCA1FB5CF657F4597B5BBED36696C1FB36
E770136717AF5E160667954815111FE602076AD25CAB7F0787FB95DB740BA909
6B9C44B676BE> |-
/t <1C60D8A8C9B08A9588E3899D564A1C85A21E7ECD682F7264F9FA2C5B8AAA
9531CF8104A82028C70865096831B7691482C6CD5739A709430BD5E37D9AD368
AEF15C95BA0457E0E2E912D22EE7464FCC1D6BFCBA58957411FB539551EDEA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 77 /M put
dup 65 /A put
dup 67 /C put
dup 83 /S put
dup 99 /c put
dup 104 /h put
dup 101 /e put
dup 100 /d put
dup 117 /u put
dup 108 /l put
dup 105 /i put
dup 110 /n put
dup 103 /g put
dup 85 /U put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/N8 14.346 Tf
(MACSchedulingUnit)
[12.8684 10.1425 14.8338 7.80432 5.85313 7.80432 6.24047 7.80432 7.80432 3.90216 3.90216 
7.80432 11.7064 10.5299 7.80432 3.90216 5.46578 ] pdfxs
1.0 0.0 0.0 1.0 0.0 779.248 cm
Q
q
0.4 w
n
97.0 320.0 m
272.0 320.0 l
272.0 480.0 l
97.0 480.0 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
272.0 336.0 m
320.0 336.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
320.0 336.0 m
313.0 338.333 l
313.0 333.667 l
h
q
eofill
Q
S
Q
q
n
272.0 336.0 m
279.0 333.667 l
279.0 338.333 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
320.0 416.0 m
608.0 416.0 l
608.0 480.0 l
320.0 480.0 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
0.4 w
n
464.0 416.0 m
464.0 368.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
464.0 368.0 m
466.333 375.0 l
461.667 375.0 l
h
q
eofill
Q
S
Q
q
n
464.0 416.0 m
461.667 409.0 l
466.333 409.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
560.0 416.0 m
560.0 368.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
560.0 368.0 m
562.333 375.0 l
557.667 375.0 l
h
q
eofill
Q
S
Q
q
n
560.0 416.0 m
557.667 409.0 l
562.333 409.0 l
h
q
eofill
Q
S
Q
Q
q
1.0 0.0 0.0 1.0 96.0 378.518 cm
1.0 0.0 0.0 1.0 0.0 31.482 cm
1.0 0.0 0.0 1.0 9.625 -9.963 cm
1.0 0.0 0.0 1.0 -9.625 -782.037 cm
[/DeviceGray] cs 0.0 sc
14.606 782.037 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B08A9457448A56EA7C5FB8F9977EE0CAEC2BE132A9582798D9
A12D991A7158A266AB46B0BC52E56347CF6FB29E83B095F618E2905DE259343D
3107D2C8B61C57C940FE1A94E0224AFCA85597E92663F1E7C148B9C3975ECD91
545BCFC0027B2EBCB76B3901E98E18894CB1542088D36ECA6AAA98B6A4D970EB
EEF2D1FB0C09BB4EB9E947E7A5CE33946C673EC34084DD9E87A82F1825EF8271
7773F2B4E2C2FFECDE032D6E653EC9275FD9B4028DE7ED9AD49A7CAC9A44F13F
C1BB0AE1880BEC653CE51E6A6B19ABD205739E49E6AD282FDF101ECB64BFE595
E3CF2EC84EA4E930F12B352361256F67151F2C490E97C35A80188F> |-
/a <1C60D8A8C9B08A95A31CD7D9F217A6CF1F14BABCF0362C345131345FB5DA
8903253396595D89CF8A07C7CC88D97C1C69BC1E5CE45E300E60E4F7D27C6213
DC5FFC4348945E031EDE2A2B75B318AC124E4F89ED0E8BE3CDCFCE2080C2F17D
88FFBAE98B6DE0A622FAB019818B9827D34B74C931E2B22FF3612B8AD479BF2C
F13A9C87601A92D144E614D92266E588A8D4DD5FCB7C88F6D288E3F6116B22B4
516C9C12E5C36EEB> |-
/o <1C60D8A8C9B08A95A31CD7D9F217A6F18926FF3B0423F5B015CF97D6B981
F0113B168E7E0D1E3957ABC06CEF4859B22A9954BBF41B5B0A328898E425BBBF
E934CC38CE2955B7C69AB12A5696F737319E33F2723102240C10687634983FE6
5CFF75CF109F072A37D97E3453F5BC39B6C98D4F7A34F71A675C1661D84354> |-
/s <1C60D8A8C9B08A958A24782D71375EF21950AD5C90FE0381E912386372A5
3E8893E8C2911213CF1E150BDB7E74C8EA48CCBE15475BDE5BD88C5C4C0A01B2
9061395799A98BCD3F8937BA6212B1C539A423AC1600C8D71F3B88126A0A037C
8E2A67D8AED92C271E1C60F0B54E9F7C498F64A1E8145546D8648B823A85CF2B
60E5F4BAE72F2B3D54063D5261E3CDC241E8928B6B90A96F9C0A0E940BBFE772
FE44246FE9A8C6CE0CF2FEC290B50BCBF64819FA58F926DE58FEA3B4F3D06E90
B802A8DAC326A47AB3> |-
/r <1C60D8A8C9B08A9588E3899D564A16E63D73C403945B39A219F0C2E6894A
45132689525A1F72ADF1CDB50373C133422451E78398E7C6087FF1A6426A3EE4
843A2C7A61BA7E48AC6380648FE6A104AFD73F34394AA6F6DA1BB570C16AF235
5392BEB4AC453120ED4C98A7FE21786BDF18AAEC1B5EA25D1409C518236DA3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 82 /R put
dup 97 /a put
dup 111 /o put
dup 115 /s put
dup 114 /r put
pop
end
%ADOEndSubsetFont
/N8 14.346 Tf
(RadioResourceControl)
[10.3434 7.01527 7.80432 3.90216 11.7064 10.3434 6.24047 5.53758 7.02962 7.80432 5.46578 
6.24047 10.9173 10.1426 7.02962 7.41697 5.46578 5.45143 7.02962 3.90216 ] pdfxs
67.322 764.105 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B08A9588E3899D564A665F0282C81886D41FB1EC41
499CC71A9910883DE93F99FB6441883A9F461CEB876B9BA6BB27FC6EF38C9F82
FC93D517A7D6AAD1F0E6DDD51089FD9ACB071668AE0BE282DB64154DDBE4F0DE
0ADD4978C4DAFEF30B436F5A65098D1726> |-
/parenright <1C60D8A8C9B08A9588E3899D564A665F0282C81886D4050197D
AF0D0918AD618FF5B7C0EB8773F14323ED3C3927A23E336B558FE232CC41DB0B
09C7115D7F67519242DA71690F1BB25568F8A064DFF869DD372B74A5C641BC6F
BDAFA58D6AA1C543224302064EC7650A98E2F2202> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
(\(RRC\))
[5.46578 10.329 9.95602 10.1426 5.46578 ] pdfxs
1.0 0.0 0.0 1.0 0.0 760.518 cm
Q
q
0.4 w
n
272.0 448.0 m
320.0 448.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
320.0 448.0 m
313.0 450.333 l
313.0 445.667 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
192.0 320.0 m
192.0 240.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
192.0 240.0 m
194.333 247.0 l
189.667 247.0 l
h
q
eofill
Q
S
Q
Q
q
1.0 0.0 0.0 1.0 528.0 347.197 cm
1.0 0.0 0.0 1.0 0.0 9.803 cm
1.0 0.0 0.0 1.0 -1.653 -9.803 cm
1.0 0.0 0.0 1.0 1.653 -782.197 cm
[/DeviceGray] cs 0.0 sc
3.328 782.197 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B08A950B74EA3C4B046CF52842CF2D581BED94C586CCC26FA1
C86070D2CAE5BF652D9485576F94095C3B90AD0D9A9C10881193E57EEF661080
90D728F137901C90CEFD5532247F888EFB7D1D860249B082200F043BE1FA02F8
6E469EC18B85> |-
/hyphen <1C60D8A8C9B08A9563F93DCB793945E380801C5287D23853E2FDFA7
D5C366A3B9CFFC759> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 76 /L put
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
/N8 14.346 Tf
(RLC-AM)
[10.3434 8.7654 10.157 4.67685 10.5299 12.8684 ] pdfxs
1.0 0.0 0.0 1.0 0.0 782.197 cm
Q
q
0.4 w
n
336.0 336.099 m
400.0 336.099 l
400.0 368.099 l
336.0 368.099 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
1.0 0.0 0.0 1.0 336.0 347.197 cm
1.0 0.0 0.0 1.0 0.0 9.803 cm
1.0 0.0 0.0 1.0 -1.461 -9.803 cm
1.0 0.0 0.0 1.0 1.461 -782.197 cm
[/DeviceGray] cs 0.0 sc
3.52 782.197 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B08A945A96BCDB3098345AF8DEDC28F1E0647424F9012B4951
EADEB5293C3D5CB82629DCBF46AA338D423636046DF8201E2EF7E4353E7362B6
AD986398BCCF80023C255BA475F68052D04E4B0A6FEAC8E3C9FCF235B15A1E92
8D9AE4F2ADE9A4F188A58ED38CB6E643B559DD69B2BCE5B64BF2BCD654AB3350
BF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 84 /T put
pop
end
%ADOEndSubsetFont
/N8 14.346 Tf
(RLC-TM)
[10.3434 8.7654 10.157 4.67685 10.1426 12.8684 ] pdfxs
1.0 0.0 0.0 1.0 0.0 782.197 cm
Q
q
0.4 w
n
528.0 336.099 m
592.0 336.099 l
592.0 368.099 l
528.0 368.099 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
1.0 0.0 0.0 1.0 432.0 347.197 cm
1.0 0.0 0.0 1.0 0.0 9.803 cm
1.0 0.0 0.0 1.0 -1.653 -9.803 cm
1.0 0.0 0.0 1.0 1.653 -782.197 cm
[/DeviceGray] cs 0.0 sc
3.328 782.197 m
/N8 14.346 Tf
(RLC-UM)
[10.3434 8.7654 10.157 4.67685 10.5299 12.8684 ] pdfxs
1.0 0.0 0.0 1.0 0.0 782.197 cm
Q
q
1.0 0.0 0.0 1.0 128.0 208.518 cm
1.0 0.0 0.0 1.0 0.0 31.482 cm
1.0 0.0 0.0 1.0 -4.28 -10.76 cm
1.0 0.0 0.0 1.0 4.28 -781.24 cm
[/DeviceGray] cs 0.0 sc
0.701 781.24 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B08A95074EE4773132B1791321D6BB0D517FEFA936CE008321
8B13151F412FDDDAA3A87CE938E6F892FA8D04A3D5271DC0FBD65577BC5392F5
8EE858BD28A6AE99E6597C4C64748784B0F0AC509E1E73B4840E71EBE08F3D5F
523F5E7AEA1C97E24666386CFC3ABEE53A8B782D4BFC6F475FA204B460009FB5
097F4E6D70AC8C10028CEDEDD08BD66BA020> |-
/H <1C60D8A8C9B08A9450211CEE5BEC0624AAD830E8745D75C37785FABC6B00
9687F0E290F05AFBF07DCDA5632C3BF36FF12E3AF3E87E220CBF8DD02FECEC4F
F948E9CF9F0519E0961F886BA0E9747CE7C732FC2121F3BA1C169C4D664B65BA
BB4AC4CBC769D01DF1BA5B9E82919DB4F2E89099849100AC68477FC478EF5210
AEBACF8560D52CAFE434497C1487260E1249DC1094EF02DD39093D8B77F7115D
982030A6CE52392338EA655F3D03FE6680597023D2EF60C3C06B117C65E932> |-
/slash <1C60D8A8C9B08A95A31CD7D9F217DC55F0A3858BA1F9B3DAF23E2FC3
38E59E41FCA65F363CA1210EA65081CA2CFFA77074B44724A6B1995B4242EF67
1F6D3C8CB38FB31745E9871F3820CB13> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 66 /B put
dup 72 /H put
dup 47 /slash put
pop
end
%ADOEndSubsetFont
/N8 14.346 Tf
(MACBCCH/CCCH)
[12.8684 10.1425 14.8338 9.94168 10.1426 10.1426 10.5299 7.02962 10.1426 10.1426 10.157 
10.5299 ] pdfxs
35.906 763.308 m
(Signaling)
[7.80432 3.90216 7.02962 7.80432 7.01527 3.90216 3.90216 7.80432 7.02962 ] pdfxs
1.0 0.0 0.0 1.0 0.0 760.518 cm
Q
q
1.0 0.0 0.0 1.0 272.0 82.518 cm
1.0 0.0 0.0 1.0 0.0 31.482 cm
1.0 0.0 0.0 1.0 38.109 -9.963 cm
1.0 0.0 0.0 1.0 -38.109 -782.037 cm
[/DeviceGray] cs 0.0 sc
43.091 782.037 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B08A95068FD557429E8364F607E3180865DBA9D9D15EF723A8
67090CA0884DC17D45FCD10E2AEA43439DE84AD034C2C9754AFF0F89CA0526D3
9AE16784D8A310AAAC7E923E9D2FDD16B2371E31D12C8E29646302B6C3AB4D0D
C3E66DE530D3F8F909873F8046B12F11FAB3F743FEBEA9E400F5AADA991AC206
736DC76C04> |-
/y <1C60D8A8C9B08A95D5AA0E4FF53B3BA1BECA0AB2AA4F3BD94D16F78B841E
7AF88C2388400C3E7BEE816A526CE004B1E4146D1DD68B9E62E41AC46610EF1D
6B0E13960D9205B01FE712180FD25C406236CCA5BFA7CD7D165644CA916F3EEE
198711EF948FDBA49FC46E065CC344CF6CE2FE4A45FDF2AE2D9657B53195D55A
696426C05530E1D790EE28B6B97E099E7B1928A4AD15DC6AAEA9655038F35A82
6F8F13E0012DD9BE676BE9B59A43> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 80 /P put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/N8 14.346 Tf
(PhysicalLayer)
[9.55444 7.41697 7.41686 5.53758 3.90216 6.24047 7.02962 8.57895 8.77975 6.62793 7.02952 
6.24047 5.46578 ] pdfxs
67.228 764.105 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Y <1C60D8A8C9B08A9450211CEE5BEC0624AAD61E20DA08BD81DDC63FB317EC
86C1FA0686C65CE260919BAD99C1232C4EF31A95DF34D7B753244DE156A34A82
51F795B1D86F7B6A238C5D05B1C2B70B164A569C5DA5DB3975F3543C55528F2B
7A2FDA5AAC46B362A80FEF196EDA1B8D7704D390A9029CC1AB396EBD111D80EA
40B032BDD44C0BE6C8558B50A0FAAC863C47A4B9B7272A7284DC75CCDEABEF36
F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 89 /Y put
pop
end
%ADOEndSubsetFont
(\(PHY\))
[5.46578 9.55444 10.5299 10.5299 5.46578 ] pdfxs
1.0 0.0 0.0 1.0 0.0 760.518 cm
Q
q
1.0 0.0 0.0 1.0 272.0 447.558 cm
1.0 0.0 0.0 1.0 0.0 24.442 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.83 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B08A946A899113EFD967CB17EB4951A88F3CF64C26ED68962E
2EE89ABCDA2D921BE7E173B7B532DB11C2CFA935D51C643B7366EB43AFDE9320
194EE1F6EE78AE1B8904AAA989BECF07003B25C3FE6A4E1D7EFAA7B071044C80
09D93EF29DF06C3C576751ED3FB2C3518B9863B82B80145F4FA99133B31E5CD9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 68 /D put
pop
end
%ADOEndSubsetFont
/N8 11.955 Tf
(PDCP)
[7.96203 8.94235 8.45219 7.96203 ] pdfxs
0.0 769.883 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/fi <1C60D8A8C9B08A95C885DB2659C87211BC4EDA918D7FF4F9A5A9E2D6341
0C785AA5FAF38C8AE2B75FE79737BD2A5819A9C9FD1EFFBB0B03F5C176E04AE0
D95C0ED963267EB7EB5A33C83F4BF0AF7884D1E3221D2E643B06E27B84AF8C42
4DBAC775FD951286090C778A82E77250186CB95F0812841A6776086C72B9A75C
81D04CA26E98A30DDA53534427AB774492119EE75D081AF8F5E7CCBE4E0ED876
83B75F5CF96456CAB3DB80295C0B75A848E49372A6B63AC399768BF32EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 255 /fi put
pop
end
%ADOEndSubsetFont
(Con\fg)
[8.45219 5.85802 6.5036 6.5036 5.85802 ] pdfxs
1.0 0.0 0.0 1.0 0.0 767.558 cm
Q
q
1.0 0.0 0.0 1.0 272.0 367.558 cm
1.0 0.0 0.0 1.0 0.0 24.442 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.83 m
/N8 11.955 Tf
(RLC)
[8.61947 7.3045 8.45219 ] pdfxs
0.0 769.883 m
(Con\fg)
[8.45219 5.85802 6.5036 6.5036 5.85802 ] pdfxs
1.0 0.0 0.0 1.0 0.0 767.558 cm
Q
q
0.4 w
n
272.0 368.0 m
320.0 368.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
320.0 368.0 m
313.0 370.333 l
313.0 365.667 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
112.0 320.0 m
112.0 272.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
112.0 272.0 m
114.333 279.0 l
109.667 279.0 l
h
q
eofill
Q
S
Q
Q
q
1.0 0.0 0.0 1.0 72.0 287.558 cm
1.0 0.0 0.0 1.0 0.0 24.442 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.83 m
/N8 11.955 Tf
(MAC)
[10.7237 8.45211 8.45219 ] pdfxs
0.0 769.883 m
(Con\fg)
[8.45219 5.85802 6.5036 6.5036 5.85802 ] pdfxs
1.0 0.0 0.0 1.0 0.0 767.558 cm
Q
q
1.0 0.0 0.0 1.0 464.0 385.75 cm
1.0 0.0 0.0 1.0 0.0 22.25 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.698 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B08A95D5AA0E4FF53B4B00F4FD45ED1C3292A223C2B705B7FF
F8BDD3EF8AF37AD0E54BCE93BEC048FCCDD945321FFFD780E0F68A20BA557FC2
E909AAC9324F1CFB69ADEB895A06686245310AA6138EFFB59A90C46631D8D16C
BFFC44CE3F6BAD7D831E7BDFC93B9F00A0CD73FBBBACAF05D99730B3F3F0CCE2
C541DCF51FE03D77ACA50D5744DF498E9738E30B1068EC8486ACD924EAA80898
01EE4E265FB08CC92CDD213E5FCD3EFF8043C49B8CE40834526FE7> |-
/w <1C60D8A8C9B08A945A96BCDB30983EA21157BCB9A2101B266852C6AD4997
90853388D8A93E2503176AC8CB0D86FEBE3B6E0EFEB0B0ADBD43862800AD149D
52407E6517ABB2C12E980F8E2B38CBA77DDB82C1EFFD8CC40AD3DA4FD9E7A4F9
3C7EF796B46DF26C8A8BC80C63E19B27676549FE752E306E264BAFDBDD734128
24C7D05710AE7B62541CF8F0D3FC045D0A0AD82DAF6E0973311750503334C4F9
C23039ECE09DFD6414156FAED4A2987F72707B689F0ECF737AE55870DFD8BD70
BE19F697747647802823953B27C8605EEBDED2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 107 /k put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/N8 11.955 Tf
(Unacknowledged)
[8.77489 6.5036 5.85802 4.87761 6.16876 6.5036 5.53523 8.45219 3.2518 5.2004 6.5036 
5.85802 5.2004 6.5036 ] pdfxs
0.0 769.75 m
(RadioBearers)
[8.61947 5.84606 6.5036 3.2518 9.50429 8.29669 5.2004 5.85802 4.54286 5.21235 4.54286 
4.61465 ] pdfxs
1.0 0.0 0.0 1.0 0.0 769.75 cm
Q
q
1.0 0.0 0.0 1.0 560.0 385.75 cm
1.0 0.0 0.0 1.0 0.0 22.25 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.698 m
/N8 11.955 Tf
(Acknowledged)
[8.77489 4.87761 6.18071 6.5036 5.52328 8.45219 3.2518 5.21235 6.5036 5.84606 5.2004 
6.5036 ] pdfxs
0.0 769.75 m
(RadioBearers)
[8.61947 5.84606 6.5036 3.2518 9.50429 8.29669 5.2004 5.85802 4.54286 5.21235 4.54286 
4.61465 ] pdfxs
1.0 0.0 0.0 1.0 0.0 769.75 cm
Q
q
1.0 0.0 0.0 1.0 152.0 303.831 cm
1.0 0.0 0.0 1.0 0.0 8.169 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.831 m
/N8 11.955 Tf
(BCCH)
[8.28473 8.46415 8.45219 8.77489 ] pdfxs
1.0 0.0 0.0 1.0 0.0 783.831 cm
Q
q
0.4 w
n
595.378 296.0 m
595.378 302.248 536.572 307.314 464.032 307.314 c
391.492 307.314 332.686 302.248 332.686 296.0 c
332.686 289.752 391.492 284.686 464.032 284.686 c
536.572 284.686 595.378 289.752 595.378 296.0 c
h
[/DeviceGray] cs 0.0 sc
S
Q
q
1.0 0.0 0.0 1.0 600.0 281.75 cm
1.0 0.0 0.0 1.0 0.0 22.25 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.698 m
/N8 11.955 Tf
(Logical)
[7.31645 5.84606 5.85802 3.2518 5.2004 5.85802 3.2518 ] pdfxs
0.0 769.75 m
(Channels)
[8.45219 6.5036 5.85802 6.5036 6.5036 5.2004 3.2518 4.61465 ] pdfxs
1.0 0.0 0.0 1.0 0.0 769.75 cm
Q
q
1.0 0.0 0.0 1.0 272.0 299.802 cm
1.0 0.0 0.0 1.0 0.0 36.198 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 783.697 m
/N8 11.955 Tf
(Signalling)
[6.5036 3.2518 5.85802 6.5036 5.84606 3.2518 3.2518 3.2518 6.5036 5.85802 ] pdfxs
0.0 769.75 m
(Radio)
[8.61947 5.84606 6.5036 3.2518 5.85802 ] pdfxs
0.0 755.802 m
(Bearers)
[8.28473 5.21235 5.84606 4.55482 5.2004 4.55482 4.61465 ] pdfxs
1.0 0.0 0.0 1.0 0.0 755.802 cm
Q
q
1.0 0.0 0.0 1.0 344.0 444.197 cm
1.0 0.0 0.0 1.0 0.0 9.803 cm
1.0 0.0 0.0 1.0 95.025 -9.803 cm
1.0 0.0 0.0 1.0 -95.025 -782.197 cm
[/DeviceGray] cs 0.0 sc
100.006 782.197 m
/N8 14.346 Tf
(PDCP)
[9.55444 10.7308 10.1426 9.55444 ] pdfxs
1.0 0.0 0.0 1.0 0.0 782.197 cm
Q
q
0.4 w
n
320.0 216.0 m
272.0 216.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
320.0 216.0 m
313.0 218.333 l
313.0 213.667 l
h
q
eofill
Q
S
Q
Q
q
1.0 0.0 0.0 1.0 264.0 243.3 cm
1.0 0.0 0.0 1.0 0.0 20.7 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: WKFBAA+CMR10 Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /WKFBAA+CMR10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5000793 def
/FontBBox {-251 -250 1009 969} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 0 /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/fi/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/comma/hyphen/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/A
/.notdef/C/.notdef/.notdef/.notdef/.notdef
/H/.notdef/.notdef/.notdef/L/.notdef
/N/O/.notdef/.notdef/.notdef/S
/.notdef/U/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/g/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/n/o/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef
/N5/WKFBAA+CMR10 -1 TZ
0.0 785.192 m
%ADOBeginSubsetFont: WKFBAA+CMR10 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/WKFBAA+CMR10 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B08A9454CA4C75C5C983901A105955FD02AB95A1D9A8A1EF86
541AF97FFF68AEDD6EF3F9788853DEF093D0FBD78A3FC5DB04802F61AEF127B4
D274CEA5A0495BD438B2F75833238070F9A0DEDDCFDFABEF5BEDD017B6BBEB22
A7AE0ECB6D46586699459E2B529F0C643928AD0C60B989B7B119C20E74352A5B
2677AF404D34EE8C876EF19CEC> |-
/H <1C60D8A8C9B6E3FA234780E58B87D2EA5F590A170732E8342AECC9351661
21E62A1070A4510D0980322AC6BABDF7A3A228EF9BBB4BF97033D21D805A1136
8BAC08025F6C287B3394B00073DBEA738B9B7C277CB9D0325E22DEB40E13A642
B54596E5600079B51218C4BB379F69673BE6276C3860567D7EA7F1FEF70370E2
7C9E151FE7B8E0E027C8D98B0318B79FB51890320A3F9A574D98EA7D5B8CEC6B
D0B71DCE424933EDA6F23705BC6A06DBF250AD44DE114AD6E4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/WKFBAA+CMR10 findfont /Encoding get
dup 67 /C put
dup 72 /H put
pop
end
%ADOEndSubsetFont
/N5 9.963 Tf
(CCCH)
[7.19329 7.19329 7.20325 7.47225 ] pdfxs
0.0 773.237 m
%ADOBeginSubsetFont: WKFBAA+CMR10 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/WKFBAA+CMR10 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B08A95C5897169EED99899F86A6DCF3CD291B001131D3BCB45
BF71748507542417352D5B30F63C60EB90DCF55005F88E95175B21D3219CD9E9
2E89E417B177D285600845553F66626D2225552D23A7697637BDCEEECAEA18AB
42A896E96FF5B3536CC368A5F7504B6C75D962A4B5F9534F79AC78DC99848461
42257A40DE257430C92806EBA73FF7D93DF0A6C207299E2D17F4071F9096D016
163F4D3EC1889ADA266D3682F2D99904573A5022A10E61069737F2D55F919F95
A33DB6DD2667321E4727855B58DBF4B1E5A294928E6CEABFBD34F296C1B758> |-
/A <1C60D8A8C9B6E3FA234780E51B74F22595A687FBF09EF454D03FB6CE0741
835DFEA276F2BD9DA1E567C1E2AA272C9AF9AA6DE082183B6B06B110AD19A95E
B7E4DF541495BB98EE61CCB080A42D64DF1FC55075E90898D74F5BD66A3B7E79
6EB7D1A2531A03B3A15C447C7878675F786C2958D8D170FECAAEB79653062A89
C24C3F187B500D1CE71547CC2DD4654566FBE73FC2C8B09F> |-
/comma <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F15202B7A7698
DF02C61BB3071F67A562DD96D0521F578EC9F57BF5A71BF023ACCD67B8727CFD
38538E62ACB3D55D0B01252803DA68060E5342CFD41A7D> |-
/U <1C60D8A8C9B6E3FADD42AB2F9476BCEA084D1DF05959BFBD4842DBC964DC
B6D0983EB799CC8E9224C92BB6727696E1A89D45CE93DEE00384B973684479A0
B993B2D9C6C0A2AB61FE4FA10EC4C1C1052FAEB5DEFBF43031503D55B8FDF985
110C8D46F3C8553B8DC21E71453D00BFC15C0ADE3E30761C704531B8CEFBA6C0
768198D5D439F4284E7EA4> |-
/L <1C60D8A8C9B66482C0AC2637AE818322843640782B4084B6BCB7EAC5B87B
B576EB951099027BB2082BCC7485557848EF03B40B2EB92530435BB00C45D615
C96475683CC7E08881B1B27444928202F03C5C87C466F5A1BE71B5B95971F09E
1717B5E5FD97DD51> |-
/hyphen <1C60D8A8C9B08A959E2F69652E8B76AC2AC5B4F1FA8662A86AEED57
846929C2FBC07360B> |-
/O <1C60D8A8C9B08A946182837629000F56F09865179A66BE0CDE81459AF148
646A0C8953F25CD2632360B9585500530A45DCFC4514524F032073F394096348
EB9A110A91C0796AACEBDA9B5DDF5D03A70D245BC8BE0023531BFCA33B863C7F
245C98276C1AB30E6CF100> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/WKFBAA+CMR10 findfont /Encoding get
dup 83 /S put
dup 65 /A put
dup 44 /comma put
dup 85 /U put
dup 76 /L put
dup 45 /hyphen put
dup 79 /O put
pop
end
%ADOEndSubsetFont
(SACCH,UL-ALLOC)
[5.53943 7.19329 7.19329 7.19329 7.47225 6.08739 7.47225 6.22688 3.31761 7.47225 6.22688 
6.22688 7.75121 7.19329 ] pdfxs
1.0 0.0 0.0 1.0 0.0 771.3 cm
Q
q
1.0 0.0 0.0 1.0 272.0 195.3 cm
1.0 0.0 0.0 1.0 0.0 20.7 cm
1.0 0.0 0.0 1.0 0.0 -792.0 cm
[/DeviceGray] cs 0.0 sc
0.0 785.192 m
%ADOBeginSubsetFont: WKFBAA+CMR10 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/WKFBAA+CMR10 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6E3FA234780EB1A04772A480C0BA74E47A01736C3330B79F9
4973DD24567A876D5331B1C1E5BDF74D24451B47112EB46B9EF65275AA4A1B84
3B86074DE54D20B17279B8B61F620808991404B9C81BB570221FC9ADD03DB794
BF42287F0E41BBE081B607E124D3995DAA3B69C88F88634917B7C5B3ECB04ABA
359AB76EF6C57846C442789B4408741761D97ABFED4F6595> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/WKFBAA+CMR10 findfont /Encoding get
dup 78 /N put
pop
end
%ADOEndSubsetFont
/N5 9.963 Tf
(LCHAN)
[6.22688 7.19329 7.47225 7.47225 7.47225 ] pdfxs
0.0 773.237 m
%ADOBeginSubsetFont: WKFBAA+CMR10 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/WKFBAA+CMR10 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4
CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDF
C5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A
96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-
/n <1C60D8A8C9B08A95C5897169EED9664BED359D179BD38846B55E34D4CAA6
E85E9CF3F20D5FF6B35F1C9AAE2A542B7B24E087B6004A4C7219997095CC0DD0
7A15DB83B5FEAD13F209441FFD364AD3DBF6E16129F3599BACA005A523490ABC
41E4DF320ACE384037EE1D352E3FAD8A9E2CECBD75A999F7B655F4FFBFAC6FFF
84029A8DF710DBB0D7CD4C1D20367E79BC4E312103DCC482005590EA2F1652EA
57C34D10CC78642AFD> |-
/fi <1C60D8A8C9B08A95C5897169EED9664BED359E1B6FA8046F967D286B5C3
15A2CE47E3043EA3526C6192449635F2DA5AE3EE73919B52D525C096ECB55C63
DDB789A7F918074FC45E4ACDE6751656039844BA59107A293FBC6F9D2FA57995
2076F62E9DABA5CEDE9C9326D1250FF5FA67CCED67DFAA3C183BF1B9C26748E0
DDFEEE8F8464B1DCA14FE4BD296DEF29C921827AB4EDDC974773DB09417C4F23
2E6AD283B19FF29059BF9379DF784AAAD95EC606450E2256F10C70E5A28F3650
8106B27B13371584DB56C0B1A191AE795A2B9CE6617EFD2A3> |-
/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A1
6C40D52FF50AB2BCF83396829D3E501BD0EAB8595D9693E632ABAF05A4D1FBD5
E9FB32E59BDDF670BD3805B1A8647E1D2641030D018FCD259301AC116F3DEE87
AA68CECE526FB7B8BC0206EAEFB580DA05969530F8D40CD15579447988D4CF07
5C24F15E32C0A9AC369D08351B0D49CAFF731E593F6C55EE74B16DE9D9A4B199
3D1CF0FF1D3A57A52A0C64F106D414FF112A5DA34DEE3AB850B6A4492C25D3F0
9EFC86EFE140D828B1F4BAE5664F14014926ED1A5AFBCC814A3428F143CF5FB2
88702BF23054721A3BAA8027EF0D34A7A361A40A12717277178C5820C35A1131
71DEF9DBB455B7A9D7BB98406120BD93C5B4D04664B09F3E37553C20D6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/WKFBAA+CMR10 findfont /Encoding get
dup 111 /o put
dup 110 /n put
dup 255 /fi put
dup 103 /g put
pop
end
%ADOEndSubsetFont
(Con\fg)
[7.19329 4.9815 5.53943 5.52946 4.9815 ] pdfxs
1.0 0.0 0.0 1.0 0.0 771.3 cm
Q
q
0.4 w
n
96.0 512.0 m
608.0 512.0 l
608.0 576.0 l
96.0 576.0 l
h
[/DeviceGray] cs 0.0 sc
S
Q
q
1.0 0.0 0.0 1.0 248.0 530.677 cm
1.0 0.0 0.0 1.0 0.0 31.323 cm
1.0 0.0 0.0 1.0 18.371 -9.804 cm
1.0 0.0 0.0 1.0 -18.371 -782.196 cm
[/DeviceGray] cs 0.0 sc
23.353 782.196 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B08A9450211CEE5BEC0624AAD61E20DA087AF6CE2CC460CB91
56D70971B4F573496B7FD245E91E1A13FA64FC276DFC008C91A4594C71C5A33F
79FCA3C81634DC163BF860C9F7893AC3177A2CBC9CA5E730AF222B73BC521620
52E8A5A44CFE60B4A17370AC835D89AA5DD03C948D55A5D0D589B88BC402108B
55C2022A1E27EF39D11C4424EF38CD4FF2B8180A705396F4B78B7BF886D7C3> |-
/m <1C60D8A8C9B08A9470D47893C524B8442A6D5FCC719CF17025BC6A413B6C
6640F8956584D914C9C9D018484A3A33907B87A801F0D38BE8B4EF246B19B854
26E567F8024D9DF561C1E3204C330E7DC4723C425AB30FFBFED250025D56174E
962CB7C4970DA2406D2142E11BD0AB3E7FE21CAAE6EEC90D2BFBE156467CC804
1AC596BABA32E321C59A7E110CD923FDB1B280788E86DF169E08C381139C15DF
7D53A0BF9E51D0BB4B136199247931E6B8065FA665C5A6840C5D4CFD2DDDCD90
2569139899B5301D6361C2C7F753ECC949702681> |-
/v <1C60D8A8C9B08A95D5AA0E4FF53B41381564F0500F5158E5258FD148D575
D47D7AF0645A185B2D2FD47C2473D6E0300550C98B9FBE7E7B172505D998291F
659B6660DD4AA415130FB3FCC098B75952A5B755041D0DB52F8F3E5F95235C33
D35C9549D6004B3EEA238BFB5A7118BD49CBDDDDF7FE36F8D7E09074914BE384
92C4AE061BF59CD4A932> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 78 /N put
dup 109 /m put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/N8 14.346 Tf
(NonAccess-StratumDriver)
[10.5299 7.02962 12.4811 10.5299 6.24047 6.24047 6.25482 5.53758 5.53758 4.67685 7.80432 
5.46578 5.46578 7.02962 5.45143 7.80432 16.3974 10.7165 5.46578 3.90216 7.02952 6.24047 
5.46578 ] pdfxs
19.035 764.264 m
%ADOBeginSubsetFont: XKLAAA+CMR12 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/XKLAAA+CMR12 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B08A9568507F33172027C105B5ADB42A2ADDD6875C9A3DB1AD
4DC7E04A9E6B3A6C0897065590D0DF596B9D4827294F3FB8387775CFE43E111F
24C64BAA361CF3D506A78B95E47D9C23884E5165BC0EE44B17F595CC8F12CFD5
5553EBF34C4C2337DA86647F2FEF6B3EE340663204B762ACF5A25C3D1D59F6EA
3CB6029CDDB8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/XKLAAA+CMR12 findfont /Encoding get
dup 102 /f put
pop
end
%ADOEndSubsetFont
(\(networkingdeviceinterface\))
[5.46578 7.80432 6.24047 5.07844 9.75529 7.01527 5.46578 7.41686 3.90216 7.80432 11.7064 
7.80432 6.24047 7.41686 3.90216 6.24047 10.9173 3.90216 7.41697 5.46578 6.24047 5.46578 
4.2894 7.02962 6.24047 6.24047 5.46578 ] pdfxs
1.0 0.0 0.0 1.0 0.0 760.677 cm
Q
q
0.4 w
n
464.0 512.0 m
464.0 480.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
464.0 480.0 m
466.333 487.0 l
461.667 487.0 l
h
q
eofill
Q
S
Q
q
n
464.0 512.0 m
461.667 505.0 l
466.333 505.0 l
h
q
eofill
Q
S
Q
Q
q
0.4 w
n
184.0 512.0 m
184.0 480.0 l
[/DeviceGray] cs 0.0 sc
S
q
n
184.0 480.0 m
186.333 487.0 l
181.667 487.0 l
h
q
eofill
Q
S
Q
q
n
184.0 512.0 m
181.667 505.0 l
186.333 505.0 l
h
q
eofill
Q
S
Q
Q
Q
/WKFBAA+CMR10 /Font _pdfUndefineResource
/N5 /Font _pdfUndefineResource
/XKLAAA+CMR12 /Font _pdfUndefineResource
/N8 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
