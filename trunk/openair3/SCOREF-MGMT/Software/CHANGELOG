
v1.3.4
* These documentation files have been updated: README.RUNNING, README.HEADER_TEMPLATE, README.BUILD, README

v1.3.3
* CONF_LOCATION_UPDATE_INTERVAL removed from the configuration file, functionality is kept, though
* Bugfix Incoming buffer size is now validated in GeonetWirelessStateRequestEventPacket::serialize()
* InquiryThread's interface has been changed a little, now it receives ManagementServer functionality 
  as a IManagementPacketSender interface not to expose everything to the thread

v1.3.2
* ItsKeyManager error code has been changed to 0xDEAD from 0xEEEE
* GN addresses are now printed the same way HITACHI does
* ManagementClient does not have anything to do with neither UdpSocket nor 
  boost::thread anymore, they're handled by ManagementServer now
* InquiryThread doesn't play with UdpSocket anymore either, it merely notifies
  ManagementServer to do what is necessary
* Bugfix Size check in FacConfigurationNotificationPacket::parse() doesn't 
  discard valid packets anymore

v1.3.1
* CONFIGURATION_NOTIFICATION packet of FACilities added to simulator
* A new scenario file 04.sce has been added for CONFIGURATION_NOTIFICATION
* CONFIGURATION_NOTIFICATION packet is now handled correctly and GN is being notified by a 
  CONFIGURATION_AVAILABLE packet
* ManagementClientManager::updateManagementClientState() doesn't handle packets anymore 
  and LOCATION_TABLE_REQUEST is now sent by ManagementServer upon the connection of a GN client
* Bugfix ConfigurationAvailable now resizes the serialized buffer correctly

v1.3.0 (released on 19 Nov 2012)
* Now simulator can send LOCATION_UPDATE
* Bugfix GeonetPacket::serialise() now validates incoming buffer size
* ManagementServer class introduced and caused intensive changes in main.cpp
* Client type is now recognized better according to the event type/subtypes

v1.2.2
* test/simulation/README updated
* test/simulation/packet.py's communication profile request code updated with Andrea's sample
* Bugfix Communication Profile filtering is now handled correctly

v1.2.1
* Simulator can now send COMMUNICATION_PROFILE_REQUEST
* A new scenerio file named 02.sce added for Communication Profile tests
* Bugfix Rx buffer resize error, now it's set to RX_BUFFER_SIZE correctly
* `extended', `valid', `version', and `priority' fields of packet header are now parsed
* Bugfix Local variable reference error mgmt_comm_prof_manager.cpp
* Bugfix Communication profile pass-by-value in mgmt_comm_prof_manager.cpp
* Bugfix Location table response is now parsed correctly
* Incoming Location Update is now parsed and MIB is updated
* Incoming filter sent thru COMM_PROF_REQ is now used to filter Communication Profiles
* -v and --version parameters are now recognized

v1.2.0 (released on 5 Nov 2012)
* UdpServer class renamed as UdpSocket
* ManagementClient class has its own socket now (currently not in use, though)
* README.RUNNING updated with FACilities configuration files directory

v1.1.13
* Bugfix erase/remove idiom error is fixed in mgmt_configuration.cpp
* PacketHandlerResult class is created to carry the result and the response packet if there's one
* PacketHandler does not have access to the socket anymore

v1.1.12
* Bugfix Invalid iterator in Communication Profile Response code
* PacketHandler now returns relevant task
* Bugfix Erase-remove idiom fixed in Configuration code
* Initial code for CONFIGURATION UPDATE AVAILABLE sending

v1.1.11
* Cppcheck corrections made

v1.1.10
* Bugfix for sample configuration lines given inside comments in a .conf file
* Bugfix Simulator now binds on a port to keep source port constant
* DEFINE_CLIENT_PORT command added for scenario files
* Bugfix Address copying error causing creation of bogus client objects in ManagementClient fixed
* Bugfix State comparison inside ManagementClient::setState() fixed
* Bugfix Stupid increment operator usage has been fixed for ManagementClientManager::updateMan...

v1.1.9
* Documentation/SCOREF-MGMT_Configuration.{odt|pdf} files have been updated according 
  to the new scheme introduced by FACilities configuration files
* bin/IF.MGMT.conf file renamed as bin/MGMT.conf
* New header and instructions have been added into bin/configuration/MGMT.IHM.conf file
* README.RUNNING and bin/valgrind.sh files updated according to configuration file name change
* Now Configuration class is able to parse any .conf extensioned file under some certain directory
* Exceptions thrown by unit test methods handled
* Unit tests written for new Util methods
* EURECOM's address has been updated in every file's header
* Bugfix for Exception::printStackTrace() code causing SIGSEGV

v1.1.8
* test/ directory reorganised and simulation/ and unittest/ directories have been added
* A basic simulator reading files under simulation/scenarios and doing what's written 
  has been added

v1.1.7
* TODO.cppcheck file added for static analysis (currently empty since all the notifications 
  have been fixed)
* Bugfix:cppcheck: Unnecessary copy creation for exceptions
* Bugfix:cppcheck: Inefficient vector size check
* Bugfix:cppcheck: Uninitialised members
* Bugfix:cppcheck: Redundant wide scopes of some variables have been reduced
* New include path has been added for sys/types.h and README.BUILD.ECLIPSE.PATHS.xml updated

v1.1.6
* Logger::LOG_OUTPUT_CHANNEL enumeration added to control log output channel as
  FILE, STDOUT, BOTH, or NONE
* Unit tests for all Configuration class methods have been added
* Number of all the ITS keys is now calculated correctly in ItsKeyManager::getNumberOfKeys()
* Configuration::parseConfigurationFiles() now verifies if there's any configuration file to parse
* Configuration::setServerPort() now checks incoming port number against the real max value
* Bugfix in Util::unsetBit()
* Bugfix in Util::encodeBits()
* Bugfix in Util::trim()
* test/test_configuration_util.hpp added for utility methods of Configuration class' test
* test/data directory and test configuration files have been added
* OO code in test/main.cpp moved to test/main.hpp
* test/README updated according to new installation of Google C++ Testing Framework on Ubuntu 12.04

v1.1.5
* GeonetPacketFactory class has been renamed as ManagementPacketFactory
* Google C++ Testing Framework has been utilised
  - test/ directory and test codes added
  - README.TEST has been added
* Util::resetBuffer()'s and copyBuffer()'s parameters has been changed to 
  unsigned char* since size parameter is given in "bytes" and this could lead 
  to errors if resetBuffer() is given an array with elements greater than byte in size
* In Util class, boundary check errors have been fixed in encode8byteInteger(), 
  encode4byteInteger(), and encode2byteInteger() methods
* Redundant comment block has been removed from mgmt_util.hpp
* Software/Makefile has been modified after adding test/main.cpp to skip test
  code's main() method

v1.1.4
* Communication Profile ID field of Communication Profile Selection Response packet 
  has been resized to 4 bytes and a 1-byte reserved field has been added to keep the alignment
* FacCommunicationProfileSelectionResponsePacket::serialize() updated accordingly

v1.1.3
* FacConfigurationNotification class has been added to get configuration updates from 
  FACilities thru UDP socket
* ItsKeyValue become a struct to support float and string values
* ItsKeyManager now can handle float and string values
* Configuration class now can parse float and string values (given with quotes)
* mgmt_types.hpp file's symbolic constants have been fixed
* VariableSizeConfigurationItem is introduced to support string-type configuration values

v1.1.2
* Configuration class now can handle more than one configuration file
* IF.IHM.conf file added for PCVE IHM parameters
* <parameterName|parameterId> format parsing has been added for IHM parameters
* ItsKey can also hold string values of configuration items
* Configuration file name is hardcoded now, the only parameter there is optional log file name

v1.1.1
* Util::printHexRepresentation() off-by-one index error fixed
* FAC message type & subtypes have been added
* Now both BTP_A and BTP_B flags are set upon finding BTP in a communication profile definition
* mgmt_gn_datatypes.h file has been renamed as mgmt_types.h
* Type property added for management clients (now they also may be Facilities client)
* FacCommunicationProfileSelectionRequestPacket and FacCommunicationProfileSelectionResponsePacket
  packets have been added

v1.1.0 (released on 13 Aug 2012)
* README.* files have been updated and version elevated to 1.1.0

v1.0.23
* OpenDocument format of configuration manual has been added
* Location Update (0x100) packet and a corresponding configuration parameter has been added
  Now both Wireless State Update and Location Update can be sent on different time intervals

v1.0.22
* Eclipse project file updated to use multiple g++ instances to build faster
* Communication profile parsing error fixed (NULL at the end is now trimmed to match std::map key)
* Communication profile off-by-one error fixed (profile item indexes were calculated as +1)
* Location Table Request is now sent by ManagementClient in its constructor
* State changes has been revised to make one more state valid
* Incoming packets are now passed to ManagementClientManager to update its state
* Util::getBinaryRepresentation() and Util::trim() methods added
* Makefile now compiles each file separately, which makes build faster for re-compilation
* Makefile parameters has been updated and README.BUILD file has been updated accordingly
* Makefile.sources file is no more used, files are found by shell command in Makefile

v1.0.21
* Location Table Request is now handled by ManagementClient
* State changes are now verified in ManagementClient

v1.0.20
* ManagementClient objects are now managed by ManagementClientManager
* ManagementClient now has InquiryThread and ManagementClientState
* Packet handler now sends replies itself
* InquiryThread is now aware of UDP connection
* Util::printHexRepresentation() is now in line with log format
* TRACE level has been added as a log level

v1.0.19
* Bugfix for string + integer concatenation using boost::lexical_cast
* util/Exception class has been added and utilised for stack trace printing
* Min/max values are defined for ITS keys and checked using try/catch with new Exception class
* c2x_update_gn_address_event structure has been removed since it's no more used
* More doxygen comments have been added and more debug messages have been removed

v1.0.18
* InquiryThread class has been added for sending repetitive Wireless State Request
* Doxygen file has been renamed to SCOREF-MGMT.doxygen
* README.BUILD.ECLIPSE.PATHS.xml file has been updated with new versions of used libraries
* Standard I/O is no more used anywhere, instead Logger class has been utilised
* Command-line parameter parser has been added but #ifdef'ed out to wait version 1.50.0 of Boost

v1.0.17
* SCOREF-MGMT_Configuration.pdf file has been added under Documentation/

v1.0.16
* Openair source file template has been prepended to every source file
* README.HEADER_TEMPLATE file has been added
* 'CM-GN Interface Definition_v4.pdf' and 
  'ITS Station Management Core - Low Level Description.pdf' files has been
  added under Documentation/ and Documentation/README file has been updated
* Doxygen documentation has been added for mgmt_its_key_manager.hpp file

v1.0.15
* README.BUILD.ECLIPSE.PATHS.xml file updated with Boost path
* Communication profiles defined in L221-4.1.3 are entered into conf. file
* Communication profiles are now parsed from configuration file
* UdpServer and Util classes are moved into util/ directory
* A primitive Log class has been added

v1.0.14
* Wireless State response/request is now separate (not tested)

v1.0.13
* Compilation error fixed in main.cpp
* Doxygen comments for UdpServer class has been added

v1.0.12
* Forgotten UDP server class committed and version numbers are corrected

v1.0.11
* Missing Doxygen tags added

v1.0.10
* ManagementClient added and client state is now kept per-client basis

v1.0.9
* Communication profile request and response packets added
* README.BUILD.ECLISE and README.BUILD.ECLIPSE.CODING_STYLE.xml
  files added for Eclipse development instructions
* GeonetMessageHandler now keeps client state and sends bulk configuration 
  if corresponding request has been lost

v1.0.8
* ITS parameters are now classified and processed accordingly
* ItsKeyManager class added to split ITS configuration code
* Linkage parameters are re-ordered in Makefile

v1.0.7
* UdpServer.{cpp|hpp} updated and main() code clarified

v1.0.6
* Parameter parsing error fixed
* FAC_ parameters added into configuration file
* Wireless State response parser added (not tested)
* README.BUILD.ECLIPSE file added

v1.0.5
* Makefile (and Makefile.sources) file added to remove development ties with
  Eclipse and README.BUILD file updated accordingly

v1.0.4 (released on 23 May 2012)
* ITS key values are updated and classified as FAC and NET
* Wireless state and network state packets added
* Location table is now asked and response is parsed

v1.0.3
* Doxygen file added (IF.MGMT.doxyfile)

v1.0.2
* Configuration file added
* Configuration file is no more hard-coded but read as a command-line parameter
* UDP server port number is no more hard-coded but read from configuration file
* All 22 parameters are encoded into Set Configuration bulk message
* Comment lines written for most header files/classes/methods
* Faulty `key count' field encode fixed 

v1.0.1
* `Get Configuration' message is parsed and replied with a "partial" 
  bulk Set Configuration message

v1.0.0
* Initial version
* Mostly structural code, almost nothing functional

- Baris Demiray <baris.demiray@eurecom.fr>
