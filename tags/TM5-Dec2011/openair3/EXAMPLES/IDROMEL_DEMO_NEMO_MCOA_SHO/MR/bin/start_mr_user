#/bin/bash
# File : ip_config_mr_sho.sh
# Authors
# Lionel Gauthier
# Philippe Foubert
# V1 2009 Fev 06
######################################################################
DEMO_DIR=$OPENAIR3_DIR"/EXAMPLES/IDROMEL_DEMO_NEMO_MCOA_SHO/MR"
DATE=`date +"%Y_%b_%d.%HH%MMin"`
LOG_FILE=$DEMO_DIR"/log/mr_sho_"$DATE".log"
IF0=eth0
IF1=eth1
IF2=eth2
NEMOD=`which mip6d`
source $DEMO_DIR"/bin/params.sh"
######################################################################
black='\E[30m'
red='\E[31m'
green='\E[32m'
yellow='\E[33m'
blue='\E[34m'
magenta='\E[35m'
cyan='\E[36m'
white='\E[37m'

check_ch1 ()
{
#check ipv4 connectivity
  echo_warning "CHECKING IPV4/nasmesh0 CH1"
  lskdfto 2>/dev/null
  while [ $? -ne 0 ]; do
    ping -c 2 $CH1_IN_ADDR
  done
  echo_success "CH1 IPV4 CONNECTIVITY OK"
#check ipv6 connectivity
  echo_warning "CHECKING IPV6/nasmesh0 CH1"
  lskdfto 2>/dev/null
  while [ $? -ne 0 ]; do
    ping6 -I nasmesh0 -c 2 $CH1_IN6_LLADDR
  done
  echo_success "CH1 IPV6 CONNECTIVITY OK"
}
check_ch2 ()
{
#check ipv4 connectivity
  echo_warning "CHECKING IPV4/nasmesh1 CH2"
  lskdfto 2>/dev/null
  while [ $? -ne 0 ]; do
    ping -c 2 $CH2_IN_ADDR
  done
  echo_success "CH2 IPV4 CONNECTIVITY OK"
#check ipv6 connectivity
  echo_warning "CHECKING IPV6/nasmesh1 CH2"
  lskdfto 2>/dev/null
  while [ $? -ne 0 ]; do
    ping6 -I nasmesh1 -c 2 $CH2_IN6_LLADDR
  done
  echo_success "CH2 IPV6 CONNECTIVITY OK"
}
check_lfn ()
{
#check ipv4 connectivity
  echo_warning "CHECKING IPV4 LFN"
  lskdfto 2>/dev/null
  while [ $? -ne 0 ]; do
    ping -c 2 $LFN_IN_ADDR
  done
  echo_success "LFN IPV4 CONNECTIVITY OK"
#check ipv6 connectivity
  echo_warning "CHECKING IPV6 LFN"
  lskdfto 2>/dev/null
  while [ $? -ne 0 ]; do
    ping6 -c 2 $LFN_IN6_ADDR
  done
  echo_success "LFN IPV6 CONNECTIVITY OK"
}

######################################################################
cecho()   # Color-echo
          # arg1 = message
          # arg2 = color
{
local default_msg="No Message."
    message=${1:-$default_msg}
    color=${2:-$black}
    echo -e "$color"
    echo -n "$message"
    tput sgr0
    echo
    return
}

echo_error() {
local my_string=""
  until [ -z "$1" ]
  do
    my_string="$my_string$1"
    shift
  done
  cecho "$my_string" $red
}

echo_warning() {
local my_string=""
  until [ -z "$1" ]
  do
    my_string="$my_string$1"
    shift
  done
  cecho "$my_string" $yellow
}

echo_success() {
local my_string=""
  until [ -z "$1" ]
  do
    my_string="$my_string$1"
    shift
  done
  cecho "$my_string" $green
}

isanumber () {
  echo $1 | egrep "^[0-9]+$" > /dev/null 2>&1
  if [ "$?" -eq "0" ]; then
    # The grep found only 0-9, so it's an integer. We can safely do a test on it.
    return 0
  else
    # If the grep found something other than 0-9, then it's not an integer.
    return 2
  fi
}
wait_process_started () {
  if  [ -z "$1" ]
  then
    echo_error "WAITING FOR PROCESS START: NO PROCESS"
    return 1
  fi
  while [ `ps -C $1` -neq 0 ]; do
    echo_warning "WAITING FOR $1 START"
    sleep 2
  done
  echo_success "PROCESS $1 STARTED"
  return 0
}
######################################################################
echo_warning "Stopping radvd service"
/etc/init.d/radvd stop
#/etc/init.d/radvd start
#sleep 2
#/etc/init.d/radvd stop
echo_warning "Shutting down all ethx interfaces"
ip link set $IF0 down 
ip link set $IF1 down 
ip link set $IF2 down 

echo_warning "Flushing ip6tables"
ip6tables -F
sysctl -w net.ipv6.conf.all.accept_ra=0
sysctl -w net.ipv6.conf.all.forwarding=1

echo_warning "Bringing up eth0, eth1"
ip link set $IF0 up 
ip link set $IF1 up 
ip link set $IF2 up 

echo_warning "Configuring address on NEMO link"
ip -6 addr add 2001:4:0:2::1/64 scope global dev $IF1
######################################################################
killall -q mac_sim_rrm rrm emul_int xterm

cd $OPENAIR2_DIR
sudo rmmod nasmesh
sudo insmod $OPENAIR2_DIR/NAS/DRIVER/MESH/nasmesh_mr.ko nas_IMEI=0x12345678,0x03000000

echo_warning "Classification rule for DTCH-Broadcast -reception of Router Advertisement"

$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c0   -i0 -z0 -x ff02::1       -y ff02:0:0:0:0:0:0:1        -r 3  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c1   -i0 -z0 -x ff02::2       -y ff02:0:0:0:0:0:0:2        -r 3  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c2   -i0 -z0 -x ff02::3       -y ff02:0:0:0:0:0:0:3        -r 3  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c3   -i0 -z0 -x $MR_IN6_ADDR1 -y 2001:2f0:110:6000:0:0:0:1 -r 4  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c4   -i0 -z0 -x $MR_IN6_ADDR1 -y 2001:1:0:0:0:0:0:6        -r 4  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c5   -i0 -z0 -x $MR_IN6_ADDR1 -y 2001:4:0:0:0:0:0:1        -r 4  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c6   -i0 -z0 -x $MR_IN6_ADDR1 -y fe80:0:0:0:3d6:5200:100:1 -r 4  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c7   -i0 -z0 -s $MR_IN_ADDR   -t $CH1_IN_ADDR              -r 4  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c8   -i1 -z0 -x ff02::1       -y ff02:0:0:0:0:0:0:1        -r 11  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c9   -i1 -z0 -x ff02::2       -y ff02:0:0:0:0:0:0:2        -r 11  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c10  -i1 -z0 -x ff02::3       -y ff02:0:0:0:0:0:0:3        -r 11  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c11  -i1 -z0 -x $MR_IN6_ADDR2 -y 2001:2f0:110:7000:0:0:0:1 -r 12  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c12  -i1 -z0 -x $MR_IN6_ADDR2 -y 2001:1:0:0:0:0:0:7        -r 12  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c13  -i1 -z0 -x $MR_IN6_ADDR2 -y 2001:4:0:0:0:0:0:1        -r 12  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c14  -i1 -z0 -x $MR_IN6_ADDR2 -y fe80:0:0:0:3d6:4200:200:1 -r 12  > /dev/null
$OPENAIR2_DIR/NAS/DRIVER/MESH/RB_TOOL/rb_tool -a -c15  -i1 -z0 -s $MR_IN_ADDR2  -t $CH2_IN_ADDR              -r 12  > /dev/null

echo_warning "Setting nasmesh1 interface"
ip link set nasmesh1 up
ip -4 addr add $MR_IN_ADDR2/24  broadcast 10.0.2.255 dev nasmesh1
sysctl -w net.ipv6.conf.nasmesh1.accept_ra=0
sysctl -w net.ipv6.conf.nasmesh1.forwarding=1


echo_warning "Setting nasmesh0 interface"
ip link set nasmesh0 up
ip -4 addr add $MR_IN_ADDR/24  broadcast 10.0.1.255 dev nasmesh0
sysctl -w net.ipv6.conf.nasmesh0.accept_ra=0
sysctl -w net.ipv6.conf.nasmesh0.forwarding=1


route add -net 224.0.0.0 netmask 240.0.0.0 dev eth2
echo_warning "Starting radvd service"
/etc/init.d/radvd start
#sleep 3
######################################################################
sudo rm -f /tmp/*socket*
cd $OPENAIR3_DIR/MESH/RRM/
xterm -T RRM -hold -e sh rrm_idromel.sh &
sleep 5
cd $OPENAIR2_DIR/SIMULATION/USER_TOOLS/LAYER2_SIM
xterm -e ./mac_sim_rrm -m2 -t ../../TOPOLOGIES/eth_2chs_1node.top &
wait_process_started mac_sim
sleep 3
check_ch1
check_ch2
check_lfn
ip link set nasmesh1 down
check_ch1
check_lfn
######################################################################
sleep 5
echo_warning "Starting NEMO daemon logfile is $LOG_FILE"
xterm -e $NEMOD -c $DEMO_DIR/etc/mr_mcoa_sho.conf 2>&1 | tee $LOG_FILE &

wait_process_started mip6d


read user_keyboard
ip link set nasmesh1 up
echo '######################################################################'
echo "nasmesh1 is UP"
echo '######################################################################'
read user_keyboard
ip link set nasmesh1 down
echo '######################################################################'
echo "nasmesh1 is DOWN"
echo '######################################################################'
read user_keyboard
ip link set nasmesh1 up
echo '######################################################################'
echo "nasmesh1 is UP"
echo '######################################################################'
read user_keyboard
ip link set nasmesh0 down
echo '######################################################################'
echo "nasmesh0 is DOWN"
echo '######################################################################'
read user_keyboard
ip link set nasmesh0 up
echo '######################################################################'
echo "nasmesh0 is UP"
echo '######################################################################'
read user_keyboard
ip link set nasmesh1 down
echo '######################################################################'
echo "nasmesh1 is DOWN"
echo '######################################################################'

#echo "Lauching tcpdump s on all interfaces logs are in /opt/TESTBED_NEMO_MCOA_SHO/log folder"
#tcpdump -s 256 -i eth1 -v -w $DEMO_DIR"/log/mr_tcpdump_eth1_"$DATE".log" &
#tcpdump -s 256 -i nasmesh0 -v -w $DEMO_DIR"/log/mr_tcpdump_nasmesh0_"$DATE".log" &
#tcpdump -s 256 -i nasmesh1 -v -w $DEMO_DIR"/log/mr_tcpdump_nasmesh1_"$DATE".log" &

echo '######################################################################'
ip link show
echo '######################################################################'
ip addr show
echo '######################################################################'
######################################################################

echo "sleep 1 hour (type ctrl+C to end)"
sleep 3600


